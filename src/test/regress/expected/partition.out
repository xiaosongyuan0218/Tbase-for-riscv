-- 1 day interval --
create table t_day_1(c1 int, c2 timestamp without time zone, c3 int)
partition by range(c2) begin(timestamp without time zone '2015-09-01') step(interval '1 day') partitions(63)
distribute by shard(c1);
NOTICE:  Replica identity is needed for shard table, please add to this table through "alter table" command.
insert into t_day_1 values(1, timestamp without time zone '2015-08-31 13:11:00', 1);
ERROR:  value to inserted execeed range of partitioned table
select c1,c2,c3 from t_day_1 partition for(timestamp without time zone '2015-08-31 13:11:00');
ERROR:  the value for locating a partition is out of range.
insert into t_day_1 values(1, timestamp without time zone '2015-09-01 00:00:00', 1);
select c1,c2,c3 from t_day_1 partition for(timestamp without time zone '2015-09-01 01:00:00');
 c1 |            c2            | c3 
----+--------------------------+----
  1 | Tue Sep 01 00:00:00 2015 |  1
(1 row)

insert into t_day_1 values(1, timestamp without time zone '2015-09-03 00:00:00', 1);
select c1,c2,c3 from t_day_1 partition for(timestamp without time zone '2015-09-03 01:00:00');
 c1 |            c2            | c3 
----+--------------------------+----
  1 | Thu Sep 03 00:00:00 2015 |  1
(1 row)

insert into t_day_1 values(1, timestamp without time zone '2015-11-02 00:00:00', 1);
select c1,c2,c3 from t_day_1 partition for(timestamp without time zone '2015-11-02 01:00:00');
 c1 |            c2            | c3 
----+--------------------------+----
  1 | Mon Nov 02 00:00:00 2015 |  1
(1 row)

insert into t_day_1 values(1, timestamp without time zone '2015-11-03 00:00:00', 1);
ERROR:  value to inserted execeed range of partitioned table
select c1,c2,c3 from t_day_1 partition for(timestamp without time zone '2015-11-03 00:00:00');
ERROR:  the value for locating a partition is out of range.
delete from t_day_1;
select count(1) from t_day_1;
 count 
-------
     0
(1 row)

insert into t_day_1 values(1, timestamp without time zone '2015-09-01 13:11:00', 1);
insert into t_day_1 select generate_series(2,3), timestamp without time zone '2015-09-02 13:11:00', 1;
insert into t_day_1 select generate_series(4,7), timestamp without time zone '2015-09-03 13:11:00', 1;
insert into t_day_1 select generate_series(8,15), timestamp without time zone '2015-09-04 13:11:00', 1;
insert into t_day_1 select generate_series(16,31), timestamp without time zone '2015-09-05 13:11:00', 1;
insert into t_day_1 select generate_series(32,63), timestamp without time zone '2015-09-06 13:11:00', 1;
insert into t_day_1 select generate_series(64,127), timestamp without time zone '2015-09-07 13:11:00', 1;
insert into t_day_1 select generate_series(128,255), timestamp without time zone '2015-09-08 13:11:00', 1;
insert into t_day_1 select generate_series(256,511), timestamp without time zone '2015-09-09 13:11:00', 1;
insert into t_day_1 select generate_series(512,1023), timestamp without time zone '2015-09-10 13:11:00', 1;
insert into t_day_1 select generate_series(1024,2047), timestamp without time zone '2015-09-11 13:11:00', 1;
insert into t_day_1 select generate_series(2048,4095), timestamp without time zone '2015-09-12 13:11:00', 1;
insert into t_day_1 select generate_series(4096,8191), timestamp without time zone '2015-09-13 13:11:00', 1;
insert into t_day_1 select generate_series(8192,16383), timestamp without time zone '2015-09-14 13:11:00', 1;
--pruning--
select count(1) from t_day_1 where c2 < timestamp without time zone '2015-09-01 00:00:00';
 count 
-------
     0
(1 row)

select count(1) from t_day_1 where c2 <= timestamp without time zone '2015-09-01 00:00:00';
 count 
-------
     0
(1 row)

select count(1) from t_day_1 where c2 < timestamp without time zone '2015-09-01 23:00:00';
 count 
-------
     1
(1 row)

select count(1) from t_day_1 where c2 > timestamp without time zone '2015-09-01 01:00:00' and c2 < timestamp without time zone '2015-09-05 00:00:00';
 count 
-------
    15
(1 row)

select count(1) from t_day_1 where c2 > timestamp without time zone '2015-09-01 01:00:00' and c2 <= timestamp without time zone '2015-09-05 00:00:00';
 count 
-------
    15
(1 row)

select count(1) from t_day_1 where c2 > timestamp without time zone '2015-11-04 13:00:00';
 count 
-------
     0
(1 row)

select count(1) from t_day_1 where c2 > timestamp without time zone '2015-11-04 13:00:00' OR c2 < timestamp without time zone '2015-09-01 00:00:00';
 count 
-------
     0
(1 row)

select count(1) from t_day_1 where c2 < timestamp without time zone '2015-09-03 01:00:00' OR c2 > timestamp without time zone '2015-09-13 00:00:00';
 count 
-------
 12291
(1 row)

--update--
update t_day_1 set c3=2 where c2 < timestamp without time zone '2015-09-01 00:00:00';
update t_day_1 set c3=3 where c2 > timestamp without time zone '2015-11-04 13:00:00';
update t_day_1 set c3=4 where c2 < timestamp without time zone '2015-09-03 00:00:00';
select * from t_day_1 where c3=2;
 c1 | c2 | c3 
----+----+----
(0 rows)

select * from t_day_1 where c3=3;
 c1 | c2 | c3 
----+----+----
(0 rows)

select * from t_day_1 where c3=4 order by c1;
 c1 |            c2            | c3 
----+--------------------------+----
  1 | Tue Sep 01 13:11:00 2015 |  4
  2 | Wed Sep 02 13:11:00 2015 |  4
  3 | Wed Sep 02 13:11:00 2015 |  4
(3 rows)

--truncate --
truncate table t_day_1 partition for(timestamp without time zone '2015-08-30 00:00:00');
ERROR:  the value for locating a partition is out of range
truncate table t_day_1 partition for(timestamp without time zone '2015-09-02 00:00:00');
select count(1) from t_day_1 partition for(timestamp without time zone '2015-09-02 00:00:00');
 count 
-------
     0
(1 row)

select count(1) from t_day_1;
 count 
-------
 16381
(1 row)

truncate table t_day_1 partition for(timestamp without time zone '2015-11-04 00:00:00');
ERROR:  the value for locating a partition is out of range
drop table t_day_1;
-- 1 week interval--
create table t_day_7(c1 int, c2 timestamp without time zone, c3 int)
partition by range(c2) begin(timestamp without time zone '2015-09-01') step(interval '7 day') partitions(10)
distribute by shard(c1);
NOTICE:  Replica identity is needed for shard table, please add to this table through "alter table" command.
insert into t_day_7 values(1, timestamp without time zone '2015-08-31 13:11:00', 1);
ERROR:  value to inserted execeed range of partitioned table
select c1,c2,c3 from t_day_7 partition for(timestamp without time zone '2015-08-31 13:11:00');
ERROR:  the value for locating a partition is out of range.
insert into t_day_7 values(1, timestamp without time zone '2015-09-01 00:00:00', 1);
select c1,c2,c3 from t_day_7 partition for(timestamp without time zone '2015-09-01 01:00:00');
 c1 |            c2            | c3 
----+--------------------------+----
  1 | Tue Sep 01 00:00:00 2015 |  1
(1 row)

insert into t_day_7 values(1, timestamp without time zone '2015-09-08 00:00:00', 1);
select c1,c2,c3 from t_day_7 partition for(timestamp without time zone '2015-09-08 01:00:00');
 c1 |            c2            | c3 
----+--------------------------+----
  1 | Tue Sep 08 00:00:00 2015 |  1
(1 row)

insert into t_day_7 values(1, timestamp without time zone '2015-11-09 00:00:00', 1);
select c1,c2,c3 from t_day_7 partition for(timestamp without time zone '2015-11-09 01:00:00');
 c1 |            c2            | c3 
----+--------------------------+----
  1 | Mon Nov 09 00:00:00 2015 |  1
(1 row)

insert into t_day_7 values(1, timestamp without time zone '2015-11-10 00:00:00', 1);
ERROR:  value to inserted execeed range of partitioned table
select c1,c2,c3 from t_day_7 partition for(timestamp without time zone '2015-11-10 00:00:00');
ERROR:  the value for locating a partition is out of range.
delete from t_day_7;
select count(1) from t_day_7;
 count 
-------
     0
(1 row)

insert into t_day_7 values(1, timestamp without time zone '2015-09-01 13:11:00', 1);
insert into t_day_7 select generate_series(2,3), timestamp without time zone '2015-09-08 13:11:00', 1;
insert into t_day_7 select generate_series(4,7), timestamp without time zone '2015-09-15 13:11:00', 1;
insert into t_day_7 select generate_series(8,15), timestamp without time zone '2015-09-22 13:11:00', 1;
insert into t_day_7 select generate_series(16,31), timestamp without time zone '2015-09-29 13:11:00', 1;
insert into t_day_7 select generate_series(32,63), timestamp without time zone '2015-10-06 13:11:00', 1;
insert into t_day_7 select generate_series(64,127), timestamp without time zone '2015-10-13 13:11:00', 1;
insert into t_day_7 select generate_series(128,255), timestamp without time zone '2015-10-20 13:11:00', 1;
insert into t_day_7 select generate_series(256,511), timestamp without time zone '2015-10-27 13:11:00', 1;
insert into t_day_7 select generate_series(512,1023), timestamp without time zone '2015-11-03 13:11:00', 1;
--pruning--                
select count(1) from t_day_7 where c2 < timestamp without time zone '2015-09-01 00:00:00';
 count 
-------
     0
(1 row)

select count(1) from t_day_7 where c2 <= timestamp without time zone '2015-09-01 00:00:00';
 count 
-------
     0
(1 row)

select count(1) from t_day_7 where c2 < timestamp without time zone '2015-09-01 14:00:00';
 count 
-------
     1
(1 row)

select count(1) from t_day_7 where c2 > timestamp without time zone '2015-09-01 01:00:00' and c2 < timestamp without time zone '2015-09-16 00:00:00';
 count 
-------
     7
(1 row)

select count(1) from t_day_7 where c2 > timestamp without time zone '2015-09-01 01:00:00' and c2 <= timestamp without time zone '2015-09-16 00:00:00';
 count 
-------
     7
(1 row)

                           
select count(1) from t_day_7 where c2 > timestamp without time zone '2015-11-10 13:00:00';
 count 
-------
     0
(1 row)

                           
select count(1) from t_day_7 where c2 > timestamp without time zone '2015-11-10 13:00:00' OR c2 < timestamp without time zone '2015-09-01 00:00:00';
 count 
-------
     0
(1 row)

                           
select count(1) from t_day_7 where c2 < timestamp without time zone '2015-09-13 01:00:00' OR c2 > timestamp without time zone '2015-10-27 00:00:00';
 count 
-------
   771
(1 row)

--update--
update t_day_7 set c3=2 where c2 < timestamp without time zone '2015-09-01 00:00:00';
update t_day_7 set c3=3 where c2 > timestamp without time zone '2015-11-10 13:00:00';
update t_day_7 set c3=4 where c2 < timestamp without time zone '2015-09-09 00:00:00';
select * from t_day_7 where c3=2;
 c1 | c2 | c3 
----+----+----
(0 rows)

select * from t_day_7 where c3=3;
 c1 | c2 | c3 
----+----+----
(0 rows)

select * from t_day_7 where c3=4 order by c1;
 c1 |            c2            | c3 
----+--------------------------+----
  1 | Tue Sep 01 13:11:00 2015 |  4
  2 | Tue Sep 08 13:11:00 2015 |  4
  3 | Tue Sep 08 13:11:00 2015 |  4
(3 rows)

--truncate --
truncate table t_day_7 partition for(timestamp without time zone '2015-08-30 00:00:00');
ERROR:  the value for locating a partition is out of range
truncate table t_day_7 partition for(timestamp without time zone '2015-09-09 00:00:00');
select count(1) from t_day_7 partition for(timestamp without time zone '2015-09-09 00:00:00');
 count 
-------
     0
(1 row)

select count(1) from t_day_7;
 count 
-------
  1021
(1 row)

truncate table t_day_7 partition for(timestamp without time zone '2015-11-10 00:00:00');
ERROR:  the value for locating a partition is out of range
drop table t_day_7;
-- 1 month interval -- 
create table t_month_1(c1 int, c2 timestamp without time zone, c3 int)
partition by range(c2) begin(timestamp without time zone '2015-01-01') step(interval '1 month') partitions(24)
distribute by shard(c1);
NOTICE:  Replica identity is needed for shard table, please add to this table through "alter table" command.
insert into t_month_1 values(1, timestamp without time zone '2014-12-31 13:11:00', 1);
ERROR:  value to inserted execeed range of partitioned table
select c1,c2,c3 from t_month_1 partition for(timestamp without time zone '2014-12-31 13:11:00');
ERROR:  the value for locating a partition is out of range.
insert into t_month_1 values(1, timestamp without time zone '2015-01-01 00:00:00', 1);
select c1,c2,c3 from t_month_1 partition for(timestamp without time zone '2015-01-01 01:00:00');
 c1 |            c2            | c3 
----+--------------------------+----
  1 | Thu Jan 01 00:00:00 2015 |  1
(1 row)

insert into t_month_1 values(1, timestamp without time zone '2015-08-03 00:00:00', 1);
select c1,c2,c3 from t_month_1 partition for(timestamp without time zone '2015-08-03 01:00:00');
 c1 |            c2            | c3 
----+--------------------------+----
  1 | Mon Aug 03 00:00:00 2015 |  1
(1 row)

insert into t_month_1 values(1, timestamp without time zone '2016-11-03 00:00:00', 1);
select c1,c2,c3 from t_month_1 partition for(timestamp without time zone '2016-11-01 01:00:00');
 c1 |            c2            | c3 
----+--------------------------+----
  1 | Thu Nov 03 00:00:00 2016 |  1
(1 row)

insert into t_month_1 values(1, timestamp without time zone '2017-01-01 00:00:00', 1);
ERROR:  value to inserted execeed range of partitioned table
select c1,c2,c3 from t_month_1 partition for(timestamp without time zone '2017-01-01 00:00:00');
ERROR:  the value for locating a partition is out of range.
delete from t_month_1;
select count(1) from t_month_1;
 count 
-------
     0
(1 row)

insert into t_month_1 values(1, timestamp without time zone '2015-01-01 13:11:00', 1);
insert into t_month_1 select generate_series(2,3), timestamp without time zone '2015-02-01 13:11:00', 1;
insert into t_month_1 select generate_series(4,7), timestamp without time zone '2015-03-01 13:11:00', 1;
insert into t_month_1 select generate_series(8,15), timestamp without time zone '2015-04-01 13:11:00', 1;
insert into t_month_1 select generate_series(16,31), timestamp without time zone '2015-05-01 13:11:00', 1;
insert into t_month_1 select generate_series(32,63), timestamp without time zone '2015-06-01 13:11:00', 1;
insert into t_month_1 select generate_series(64,127), timestamp without time zone '2015-07-01 13:11:00', 1;
insert into t_month_1 select generate_series(128,255), timestamp without time zone '2015-08-01 13:11:00', 1;
insert into t_month_1 select generate_series(256,511), timestamp without time zone '2015-09-01 13:11:00', 1;
insert into t_month_1 select generate_series(512,1023), timestamp without time zone '2015-10-01 13:11:00', 1;
insert into t_month_1 select generate_series(1024,2047), timestamp without time zone '2015-11-01 13:11:00', 1;
insert into t_month_1 select generate_series(2048,4095), timestamp without time zone '2015-12-01 13:11:00', 1;
insert into t_month_1 select generate_series(4096,8191), timestamp without time zone '2016-01-01 13:11:00', 1;
insert into t_month_1 select generate_series(8192,16383), timestamp without time zone '2016-02-01 13:11:00', 1;
--pruning--           
select count(1) from t_month_1 where c2 < timestamp without time zone '2014-12-31 00:00:00';
 count 
-------
     0
(1 row)

select count(1) from t_month_1 where c2 <= timestamp without time zone '2015-01-02 00:00:00';
 count 
-------
     1
(1 row)

select count(1) from t_month_1 where c2 > timestamp without time zone '2015-04-01 13:00:00';
 count 
-------
 16376
(1 row)

select count(1) from t_month_1 where c2 > timestamp without time zone '2015-11-01 01:00:00' and c2 < timestamp without time zone '2016-1-05 00:00:00';
 count 
-------
  7168
(1 row)

select count(1) from t_month_1 where c2 > timestamp without time zone '2015-11-01 01:00:00' and c2 <= timestamp without time zone '2016-02-01 00:00:00';      
 count 
-------
  7168
(1 row)

select count(1) from t_month_1 where c2 > timestamp without time zone '2017-01-01 13:00:00';                   
 count 
-------
     0
(1 row)

select count(1) from t_month_1 where c2 > timestamp without time zone '2017-01-01 13:00:00' OR c2 < timestamp without time zone '2014-12-31 00:00:00';                     
 count 
-------
     0
(1 row)

select count(1) from t_month_1 where c2 < timestamp without time zone '2015-02-03 01:00:00' OR c2 > timestamp without time zone '2016-2-01 00:00:00';
 count 
-------
  8195
(1 row)

--update--
update t_month_1 set c3=2 where c2 < timestamp without time zone '2015-01-01 00:00:00';
update t_month_1 set c3=3 where c2 > timestamp without time zone '2017-01-01 13:00:00';
update t_month_1 set c3=4 where c2 < timestamp without time zone '2015-02-03 00:00:00';
select * from t_month_1 where c3=2;
 c1 | c2 | c3 
----+----+----
(0 rows)

select * from t_month_1 where c3=3;
 c1 | c2 | c3 
----+----+----
(0 rows)

select * from t_month_1 where c3=4 order by c1;
 c1 |            c2            | c3 
----+--------------------------+----
  1 | Thu Jan 01 13:11:00 2015 |  4
  2 | Sun Feb 01 13:11:00 2015 |  4
  3 | Sun Feb 01 13:11:00 2015 |  4
(3 rows)

--truncate --
truncate table t_month_1 partition for(timestamp without time zone '2014-12-31 00:00:00');
ERROR:  the value for locating a partition is out of range
truncate table t_month_1 partition for(timestamp without time zone '2015-09-02 00:00:00');
select count(1) from t_month_1 partition for(timestamp without time zone '2015-09-02 00:00:00');
 count 
-------
     0
(1 row)

select count(1) from t_month_1;
 count 
-------
 16127
(1 row)

truncate table t_month_1 partition for(timestamp without time zone '2017-01-04 00:00:00');
ERROR:  the value for locating a partition is out of range
drop table t_month_1;
-- 3 month interval --
create table t_month_3(c1 int, c2 timestamp without time zone, c3 int)
partition by range(c2) begin(timestamp without time zone '2015-01-01') step(interval '3 month') partitions(8)
distribute by shard(c1);
NOTICE:  Replica identity is needed for shard table, please add to this table through "alter table" command.
insert into t_month_3 values(1, timestamp without time zone '2014-12-31 13:11:00', 1);
ERROR:  value to inserted execeed range of partitioned table
select c1,c2,c3 from t_month_3 partition for(timestamp without time zone '2014-12-31 13:11:00');
ERROR:  the value for locating a partition is out of range.
insert into t_month_3 values(1, timestamp without time zone '2015-01-01 00:00:00', 1);
select c1,c2,c3 from t_month_3 partition for(timestamp without time zone '2015-01-01 01:00:00');
 c1 |            c2            | c3 
----+--------------------------+----
  1 | Thu Jan 01 00:00:00 2015 |  1
(1 row)

insert into t_month_3 values(1, timestamp without time zone '2015-08-03 00:00:00', 1);
select c1,c2,c3 from t_month_3 partition for(timestamp without time zone '2015-08-03 01:00:00');
 c1 |            c2            | c3 
----+--------------------------+----
  1 | Mon Aug 03 00:00:00 2015 |  1
(1 row)

insert into t_month_3 values(1, timestamp without time zone '2016-11-03 00:00:00', 1);
select c1,c2,c3 from t_month_3 partition for(timestamp without time zone '2016-11-01 01:00:00');
 c1 |            c2            | c3 
----+--------------------------+----
  1 | Thu Nov 03 00:00:00 2016 |  1
(1 row)

insert into t_month_3 values(1, timestamp without time zone '2017-01-01 00:00:00', 1);
ERROR:  value to inserted execeed range of partitioned table
select c1,c2,c3 from t_month_3 partition for(timestamp without time zone '2017-01-01 00:00:00');
ERROR:  the value for locating a partition is out of range.
delete from t_month_3;
select count(1) from t_month_3;
 count 
-------
     0
(1 row)

insert into t_month_3 values(1, timestamp without time zone '2015-01-01 13:11:00', 1);
insert into t_month_3 select generate_series(2,3), timestamp without time zone '2015-04-01 13:11:00', 1;
insert into t_month_3 select generate_series(4,7), timestamp without time zone '2015-07-01 13:11:00', 1;
insert into t_month_3 select generate_series(8,15), timestamp without time zone '2015-10-01 13:11:00', 1;
insert into t_month_3 select generate_series(16,31), timestamp without time zone '2016-01-01 13:11:00', 1;
insert into t_month_3 select generate_series(32,63), timestamp without time zone '2016-04-01 13:11:00', 1;
insert into t_month_3 select generate_series(64,127), timestamp without time zone '2016-07-01 13:11:00', 1;
insert into t_month_3 select generate_series(128,255), timestamp without time zone '2016-10-01 13:11:00', 1;
select count(1) from t_month_3 partition for(timestamp without time zone '2014-12-31 13:11:00');
ERROR:  the value for locating a partition is out of range.
select count(1) from t_month_3 partition for(timestamp without time zone '2015-09-05 13:11:00');
 count 
-------
     4
(1 row)

select count(1) from t_month_3 partition for(timestamp without time zone '2017-01-04 13:11:00');
ERROR:  the value for locating a partition is out of range.
--pruning--                  3
select count(1) from t_month_3 where c2 < timestamp without time zone '2014-12-31 00:00:00';
 count 
-------
     0
(1 row)

select count(1) from t_month_3 where c2 <= timestamp without time zone '2015-01-02 00:00:00';
 count 
-------
     1
(1 row)

select count(1) from t_month_3 where c2 > timestamp without time zone '2015-04-01 13:00:00';
 count 
-------
   254
(1 row)

select count(1) from t_month_3 where c2 > timestamp without time zone '2015-11-01 01:00:00' and c2 < timestamp without time zone '2016-2-05 00:00:00';
 count 
-------
    16
(1 row)

select count(1) from t_month_3 where c2 > timestamp without time zone '2015-11-01 01:00:00' and c2 <= timestamp without time zone '2016-02-01 00:00:00';      
 count 
-------
    16
(1 row)

select count(1) from t_month_3 where c2 > timestamp without time zone '2017-01-01 13:00:00';                   
 count 
-------
     0
(1 row)

select count(1) from t_month_3 where c2 > timestamp without time zone '2017-01-01 13:00:00' OR c2 < timestamp without time zone '2014-12-31 00:00:00';                     
 count 
-------
     0
(1 row)

select count(1) from t_month_3 where c2 < timestamp without time zone '2015-02-03 01:00:00' OR c2 > timestamp without time zone '2016-2-01 00:00:00';
 count 
-------
   225
(1 row)

--update--
update t_month_1 set c3=2 where c2 < timestamp without time zone '2015-01-01 00:00:00';
ERROR:  relation "t_month_1" does not exist
LINE 1: update t_month_1 set c3=2 where c2 < timestamp without time ...
               ^
update t_month_1 set c3=3 where c2 > timestamp without time zone '2017-01-01 13:00:00';
ERROR:  relation "t_month_1" does not exist
LINE 1: update t_month_1 set c3=3 where c2 > timestamp without time ...
               ^
update t_month_1 set c3=4 where c2 < timestamp without time zone '2015-02-03 00:00:00';
ERROR:  relation "t_month_1" does not exist
LINE 1: update t_month_1 set c3=4 where c2 < timestamp without time ...
               ^
select * from t_month_3 where c3=2;
 c1 | c2 | c3 
----+----+----
(0 rows)

select * from t_month_3 where c3=3;
 c1 | c2 | c3 
----+----+----
(0 rows)

select * from t_month_3 where c3=4 order by c1;
 c1 | c2 | c3 
----+----+----
(0 rows)

--truncate --
truncate table t_month_3 partition for(timestamp without time zone '2014-12-31 00:00:00');
ERROR:  the value for locating a partition is out of range
truncate table t_month_3 partition for(timestamp without time zone '2015-09-02 00:00:00');
select count(1) from t_month_3 partition for(timestamp without time zone '2015-09-02 00:00:00');
 count 
-------
     0
(1 row)

select count(1) from t_month_3;
 count 
-------
   251
(1 row)

truncate table t_month_3 partition for(timestamp without time zone '2017-01-01 00:00:00');
ERROR:  the value for locating a partition is out of range
drop table t_month_3;
-- 1 year interval --
create table t_year_1(c1 int, c2 timestamp without time zone, c3 int)
partition by range(c2) begin(timestamp without time zone '2015-01-01') step(interval '1 year') partitions(5)
distribute by shard(c1);
NOTICE:  Replica identity is needed for shard table, please add to this table through "alter table" command.
insert into t_year_1 values(1, timestamp without time zone '2014-12-31 13:11:00', 1);
ERROR:  value to inserted execeed range of partitioned table
explain verbose select c1,c2,c3 from t_year_1 partition for(timestamp without time zone '2014-12-31 13:11:00');
ERROR:  the value for locating a partition is out of range.
select c1,c2,c3 from t_year_1 partition for(timestamp without time zone '2014-12-31 13:11:00');
ERROR:  the value for locating a partition is out of range.
insert into t_year_1 values(1, timestamp without time zone '2015-01-01 00:00:00', 1);
explain verbose select c1,c2,c3 from t_year_1 partition for(timestamp without time zone '2015-01-01 01:00:00');
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Remote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)
   Output: t_year_1_part_0.c1, t_year_1_part_0.c2, t_year_1_part_0.c3
   Node/s: datanode_1, datanode_2
   Remote query: SELECT c1, c2, c3 FROM t_year_1_part_0
   ->  Seq Scan on public.t_year_1_part_0  (cost=0.00..21.90 rows=1190 width=16)
         Output: c1, c2, c3
(6 rows)

select c1,c2,c3 from t_year_1 partition for(timestamp without time zone '2015-01-01 01:00:00');
 c1 |            c2            | c3 
----+--------------------------+----
  1 | Thu Jan 01 00:00:00 2015 |  1
(1 row)

insert into t_year_1 values(1, timestamp without time zone '2016-08-03 00:00:00', 1);
explain verbose select c1,c2,c3 from t_year_1 partition for(timestamp without time zone '2016-08-03 01:00:00');
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Remote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)
   Output: t_year_1_part_1.c1, t_year_1_part_1.c2, t_year_1_part_1.c3
   Node/s: datanode_1, datanode_2
   Remote query: SELECT c1, c2, c3 FROM t_year_1_part_1
   ->  Seq Scan on public.t_year_1_part_1  (cost=0.00..21.90 rows=1190 width=16)
         Output: c1, c2, c3
(6 rows)

select c1,c2,c3 from t_year_1 partition for(timestamp without time zone '2015-06-03 01:00:00');
 c1 |            c2            | c3 
----+--------------------------+----
  1 | Thu Jan 01 00:00:00 2015 |  1
(1 row)

insert into t_year_1 values(1, timestamp without time zone '2019-11-03 00:00:00', 1);
explain verbose select c1,c2,c3 from t_year_1 partition for(timestamp without time zone '2019-11-01 01:00:00');
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Remote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)
   Output: t_year_1_part_4.c1, t_year_1_part_4.c2, t_year_1_part_4.c3
   Node/s: datanode_1, datanode_2
   Remote query: SELECT c1, c2, c3 FROM t_year_1_part_4
   ->  Seq Scan on public.t_year_1_part_4  (cost=0.00..21.90 rows=1190 width=16)
         Output: c1, c2, c3
(6 rows)

select c1,c2,c3 from t_year_1 partition for(timestamp without time zone '2019-11-01 01:00:00');
 c1 |            c2            | c3 
----+--------------------------+----
  1 | Sun Nov 03 00:00:00 2019 |  1
(1 row)

insert into t_year_1 values(1, timestamp without time zone '2020-01-01 00:00:00', 1);
ERROR:  value to inserted execeed range of partitioned table
explain verbose select c1,c2,c3 from t_year_1 partition for(timestamp without time zone '2020-01-01 00:00:00');
ERROR:  the value for locating a partition is out of range.
select c1,c2,c3 from t_year_1 partition for(timestamp without time zone '2020-01-01 00:00:00');
ERROR:  the value for locating a partition is out of range.
delete from t_year_1;
select count(1) from t_year_1;
 count 
-------
     0
(1 row)

insert into t_year_1 values(1, timestamp without time zone '2015-01-01 13:11:00', 1);
insert into t_year_1 values(generate_series(2,3), timestamp without time zone '2016-01-01 13:11:00', 1);
insert into t_year_1 values(generate_series(4,7), timestamp without time zone '2017-01-01 13:11:00', 1);
insert into t_year_1 values(generate_series(8,15), timestamp without time zone '2018-01-01 13:11:00', 1);
insert into t_year_1 values(generate_series(16,31), timestamp without time zone '2019-01-01 13:11:00', 1);
select count(1) from t_year_1 partition for(timestamp without time zone '2014-12-31 13:11:00');
ERROR:  the value for locating a partition is out of range.
select count(1) from t_year_1 partition for(timestamp without time zone '2017-09-05 13:11:00');
 count 
-------
     4
(1 row)

select count(1) from t_year_1 partition for(timestamp without time zone '2020-01-04 13:11:00');
ERROR:  the value for locating a partition is out of range.
--pruning--            
select count(1) from t_year_1 where c2 < timestamp without time zone '2014-12-31 00:00:00';
 count 
-------
     0
(1 row)

select count(1) from t_year_1 where c2 <= timestamp without time zone '2015-01-02 00:00:00';
 count 
-------
     1
(1 row)

select count(1) from t_year_1 where c2 > timestamp without time zone '2018-04-01 13:00:00';
 count 
-------
    16
(1 row)

select count(1) from t_year_1 where c2 > timestamp without time zone '2017-11-01 01:00:00' and c2 < timestamp without time zone '2019-2-05 00:00:00';
 count 
-------
    24
(1 row)

select count(1) from t_year_1 where c2 > timestamp without time zone '2019-01-01 01:00:00' and c2 <= timestamp without time zone '2015-02-01 00:00:00';      
 count 
-------
     0
(1 row)

select count(1) from t_year_1 where c2 > timestamp without time zone '2020-01-01 13:00:00';                   
 count 
-------
     0
(1 row)

select count(1) from t_year_1 where c2 > timestamp without time zone '2020-01-01 13:00:00' OR c2 < timestamp without time zone '2014-12-31 00:00:00';                     
 count 
-------
     0
(1 row)

select count(1) from t_year_1 where c2 < timestamp without time zone '2015-02-03 01:00:00' OR c2 > timestamp without time zone '2019-01-01 00:00:00';
 count 
-------
    17
(1 row)

--update--
update t_year_1 set c3=2 where c2 < timestamp without time zone '2015-01-01 00:00:00';
update t_year_1 set c3=3 where c2 > timestamp without time zone '2020-01-01 13:00:00';
update t_year_1 set c3=4 where c2 < timestamp without time zone '2016-02-03 00:00:00';
select * from t_year_1 where c3=2;
 c1 | c2 | c3 
----+----+----
(0 rows)

select * from t_year_1 where c3=3;
 c1 | c2 | c3 
----+----+----
(0 rows)

select * from t_year_1 where c3=4 order by c1;
 c1 |            c2            | c3 
----+--------------------------+----
  1 | Thu Jan 01 13:11:00 2015 |  4
  2 | Fri Jan 01 13:11:00 2016 |  4
  3 | Fri Jan 01 13:11:00 2016 |  4
(3 rows)

--truncate --
truncate table t_year_1 partition for(timestamp without time zone '2014-12-31 00:00:00');
ERROR:  the value for locating a partition is out of range
truncate table t_year_1 partition for(timestamp without time zone '2016-09-02 00:00:00');
select count(1) from t_year_1 partition for(timestamp without time zone '2016-09-02 00:00:00');
 count 
-------
     0
(1 row)

select count(1) from t_year_1;
 count 
-------
    29
(1 row)

truncate table t_year_1 partition for(timestamp without time zone '2020-01-01 00:00:00');
ERROR:  the value for locating a partition is out of range
drop table t_year_1;
--date partition: add partition & drop partiton--
create table t_drop(f1 int not null,f2 timestamp not null,f3 varchar(10),primary key(f1)) partition by range (f2) begin (timestamp without time zone '2019-01-01 0:0:0') step (interval '1 month') partitions (2) distribute by shard(f1) to group default_group;
NOTICE:  Replica identity is needed for shard table, please add to this table through "alter table" command.
ALTER TABLE t_drop ADD PARTITIONS 2; 
insert into t_drop select generate_series(1,10), timestamp without time zone '2019-01-31 23:23:59', 'aaa';
insert into t_drop select generate_series(11,30), timestamp without time zone '2019-02-01 10:23:59', 'aaa';
insert into t_drop select generate_series(31,50), timestamp without time zone '2019-03-31 23:23:59', 'aaa';
insert into t_drop select generate_series(51,100), timestamp without time zone '2019-04-01 00:00:00', 'aaa';
select count(1) from t_drop;
 count 
-------
   100
(1 row)

drop table t_drop_part_0;
drop table t_drop_part_1;
drop table t_drop_part_3;
select count(1) from t_drop partition for(timestamp without time zone '2019-01-01 00:00:00');
ERROR:  relation "t_drop_part_0" does not exist
LINE 1: select count(1) from t_drop partition for(timestamp without ...
                             ^
select count(1) from t_drop  where f2 = timestamp without time zone '2019-01-01 00:00:00';
 count 
-------
     0
(1 row)

select count(1) from t_drop;
 count 
-------
    20
(1 row)

select * from t_drop order by f1 limit 3;
 f1 |            f2            | f3  
----+--------------------------+-----
 31 | Sun Mar 31 23:23:59 2019 | aaa
 32 | Sun Mar 31 23:23:59 2019 | aaa
 33 | Sun Mar 31 23:23:59 2019 | aaa
(3 rows)

ALTER TABLE t_drop ADD PARTITIONS 3; 
insert into t_drop select generate_series(101,110), timestamp without time zone '2019-05-01 00:00:00', 'aaa';
select count(1) from t_drop;
 count 
-------
    30
(1 row)

select * from t_drop where f2 = timestamp without time zone '2019-05-01 00:00:00' order by f1 desc limit 3;
 f1  |            f2            | f3  
-----+--------------------------+-----
 110 | Wed May 01 00:00:00 2019 | aaa
 109 | Wed May 01 00:00:00 2019 | aaa
 108 | Wed May 01 00:00:00 2019 | aaa
(3 rows)

--DDL--
alter table t_drop add f4 int;
insert into t_drop select generate_series(111,120), timestamp without time zone '2019-05-01 00:00:00', 'bbb', 100;
select count(1) from t_drop where f4 = 100; 
 count 
-------
    10
(1 row)

alter table t_drop drop f4;
alter table t_drop rename f3 to f3s;
select count(1) from t_drop where f3s = 'bbb';
 count 
-------
    10
(1 row)

alter table t_drop alter f3s type char(30);
VACUUM t_drop;
	
--DML--
update t_drop set f3s='cccccccccccc' where f3s = 'bbb';
update t_drop set f3s='ddd' where f2='2019-05-01';
delete from t_drop where f2 = timestamp without time zone '2019-02-01 00:00:00';
delete from t_drop where f2 >= timestamp without time zone '2019-05-01 00:00:00' and f2< timestamp without time zone '2019-06-01 00:00:00';
insert into t_drop values(130,'2019-02-01','a');
ERROR:  value to inserted execeed range of partitioned table
insert into t_drop values(130,'2019-03-01','multi-value'),(140,'2019-05-01','multi-value'),(150,'2019-06-01','multi-value');
insert into t_drop select generate_series(200, 2226),'2019-02-01','a';
ERROR:  inserted value is not in range of partitioned table, please check the value of paritition key
insert into t_drop select generate_series(200, 2226),'2019-06-01','ffffff';
copy t_drop from stdin;
copy (select * from t_drop where f2 = timestamp without time zone '2019-07-01 00:00:00' order by 1,2,3) to stdout;
3000	Mon Jul 01 00:00:00 2019	'hhhhhhh'                     
3001	Mon Jul 01 00:00:00 2019	'hhhhhhh'                     
3002	Mon Jul 01 00:00:00 2019	'hhhhhhh'                     
3003	Mon Jul 01 00:00:00 2019	'hhhhhhh'                     
--truncate--
truncate table t_drop partition for(timestamp without time zone '2019-01-01 00:00:00');
ERROR:  relation "t_drop_part_0" does not exist
truncate table t_drop partition for(timestamp without time zone '2019-12-01 00:00:00');
ERROR:  the value for locating a partition is out of range
truncate table t_drop partition for(timestamp without time zone '2019-07-01 00:00:00');
drop table t_drop;
--int partition: add partition & drop partiton--
create table int_drop(f1 bigint,f2 timestamp default now(), f3 integer) partition by range (f3) begin (1) step (50) partitions (2) distribute by shard(f1) to group default_group;
NOTICE:  Replica identity is needed for shard table, please add to this table through "alter table" command.
ALTER TABLE int_drop ADD PARTITIONS 2; 
insert into int_drop select generate_series(1,10), null, 10;
insert into int_drop select generate_series(51,70), null, 80;
insert into int_drop select generate_series(101,120), null, 130;
insert into int_drop select generate_series(151,200), null, 190;
select count(1) from int_drop;
 count 
-------
   100
(1 row)

drop table int_drop_part_0;
drop table int_drop_part_2;
drop table int_drop_part_3;
select count(1) from int_drop partition for(20);
ERROR:  relation "int_drop_part_0" does not exist
LINE 1: select count(1) from int_drop partition for(20);
                             ^
select count(1) from int_drop  where f3 = 20;
 count 
-------
     0
(1 row)

select count(1) from int_drop;
 count 
-------
    20
(1 row)

select * from int_drop order by f1 limit 5;
 f1 | f2 | f3 
----+----+----
 51 |    | 80
 52 |    | 80
 53 |    | 80
 54 |    | 80
 55 |    | 80
(5 rows)

ALTER TABLE int_drop ADD PARTITIONS 5; 
insert into int_drop select generate_series(201,210), null, 245;
select count(1) from int_drop;
 count 
-------
    30
(1 row)

select * from int_drop where f3 = 245 order by f1 desc limit 5;
 f1  | f2 | f3  
-----+----+-----
 210 |    | 245
 209 |    | 245
 208 |    | 245
 207 |    | 245
 206 |    | 245
(5 rows)

--DDL--
alter table int_drop add f4 int, add f5 varchar(20);
insert into int_drop select generate_series(211,220), null, 249, 100, 'aaa';
select count(1) from int_drop where f4 = 100; 
 count 
-------
    10
(1 row)

alter table int_drop drop f4;
alter table int_drop rename f5 to f5s;
select count(1) from int_drop where f5s = 'aaa';
 count 
-------
    10
(1 row)

alter table int_drop alter f5s type varchar(30);
VACUUM int_drop;
	
--DML--
update int_drop set f5s='cccccccccccc' where f5s = 'aaa';
update int_drop set f5s='ddddddddddd' where f3=249;
delete from int_drop where f3 = 10;
delete from int_drop where f3 >= 1 and f3< 201;
insert into int_drop values(140,'2019-03-01',140,'aaa');
ERROR:  value to inserted execeed range of partitioned table
insert into int_drop values(90,'2019-02-01',90,'single-value-insert');
insert into int_drop values(240,'2019-05-01',240,'multi-value-insert'),(280,'2019-06-01',280,'multi-value-insert'),(330,'2019-07-01',330,'multi-value-insert');
insert into int_drop select generate_series(500, 2526),'2019-03-01',145,'a';
ERROR:  inserted value is not in range of partitioned table, please check the value of paritition key
insert into int_drop select generate_series(500, 2526),'2019-07-01',345,'ffffff';
copy int_drop from stdin;
copy (select * from int_drop where f3 > 400 order by f1) to stdout;
4000	Wed Sep 11 00:00:00 2019	405	'lllllllll'
4001	Thu Sep 12 00:00:00 2019	415	'lllllllll'
4002	Fri Sep 13 00:00:00 2019	425	'lllllllll'
4003	Sat Sep 14 00:00:00 2019	435	'lllllllll'
4004	Sun Sep 15 00:00:00 2019	445	'lllllllll'
--truncate--
truncate table int_drop partition for(5);
ERROR:  relation "int_drop_part_0" does not exist
truncate table int_drop partition for(1000);
ERROR:  the value for locating a partition is out of range
truncate table int_drop partition for(370);
drop table int_drop;
-- IN expr partition pruning
create table t_in_test(a int, b int, c timestamp)
partition by range (c) begin
(timestamp without time zone '2017-09-01 0:0:0')
step (interval '1 month') partitions (12)
distribute by shard (a)
to group default_group;
NOTICE:  Replica identity is needed for shard table, please add to this table through "alter table" command.
insert into t_in_test values(1,1,'20170901');
insert into t_in_test values(2,2,'20171001');
insert into t_in_test values(3,3,'20171101');
insert into t_in_test values(3,3,'20171201');
explain (costs off) select * from t_in_test where c in ('20171001', '20171201');
                                                         QUERY PLAN                                                         
----------------------------------------------------------------------------------------------------------------------------
 Remote Fast Query Execution
   Node/s: datanode_1, datanode_2
   ->  Append
         ->  Seq Scan on t_in_test (partition sequence: 1, name: t_in_test_part_1)
               Filter: (c = ANY ('{"Sun Oct 01 00:00:00 2017","Fri Dec 01 00:00:00 2017"}'::timestamp without time zone[]))
         ->  Seq Scan on t_in_test (partition sequence: 3, name: t_in_test_part_3)
               Filter: (c = ANY ('{"Sun Oct 01 00:00:00 2017","Fri Dec 01 00:00:00 2017"}'::timestamp without time zone[]))
(7 rows)

set enable_fast_query_shipping to off;
explain (costs off) select * from t_in_test where c in ('20170901', '20171101');
                                                         QUERY PLAN                                                         
----------------------------------------------------------------------------------------------------------------------------
 Remote Subquery Scan on all (datanode_1,datanode_2)
   ->  Append
         ->  Seq Scan on t_in_test (partition sequence: 0, name: t_in_test_part_0)
               Filter: (c = ANY ('{"Fri Sep 01 00:00:00 2017","Wed Nov 01 00:00:00 2017"}'::timestamp without time zone[]))
         ->  Seq Scan on t_in_test (partition sequence: 2, name: t_in_test_part_2)
               Filter: (c = ANY ('{"Fri Sep 01 00:00:00 2017","Wed Nov 01 00:00:00 2017"}'::timestamp without time zone[]))
(6 rows)

reset enable_fast_query_shipping;
drop table t_in_test;
-- for February of common year timestamp partition, add sub table should be ok
create table t_time_range (a int, b int, c timestamp)
partition by range (c) begin
(timestamp without time zone '2022-02-26 0:0:0')
step (interval '1 day') partitions (3)
distribute by shard(a)
to group default_group;
NOTICE:  Replica identity is needed for shard table, please add to this table through "alter table" command.
insert into t_time_range values(1, 1, '2022-02-28');
insert into t_time_range values(1, 1, '2022-03-1');
ERROR:  value to inserted execeed range of partitioned table
ALTER TABLE t_time_range ADD PARTITIONS 1;
insert into t_time_range values(1, 1, '2022-03-1');
drop table t_time_range;
create table t_time_range (a int, b int, c timestamp)
partition by range (c) begin
(timestamp without time zone '2022-02-26 0:0:0')
step (interval '1 day') partitions (1)
distribute by shard(a)
to group default_group;
NOTICE:  Replica identity is needed for shard table, please add to this table through "alter table" command.
insert into t_time_range values(1, 1, '2022-02-26');
ALTER TABLE t_time_range ADD PARTITIONS 2;
insert into t_time_range values(1, 1, '2022-02-28');
insert into t_time_range values(1, 1, '2022-03-1');
ERROR:  value to inserted execeed range of partitioned table
ALTER TABLE t_time_range ADD PARTITIONS 1;
insert into t_time_range values(1, 1, '2022-03-1');
drop table t_time_range;
-- for February of leap year timestamp partition, add sub table should be ok
create table t_time_range (a int, b int, c timestamp)
partition by range (c) begin
(timestamp without time zone '2020-02-26 0:0:0')
step (interval '1 day') partitions (3)
distribute by shard(a)
to group default_group;
NOTICE:  Replica identity is needed for shard table, please add to this table through "alter table" command.
insert into t_time_range values(1, 1, '2020-02-26');
insert into t_time_range values(1, 1, '2020-02-27');
insert into t_time_range values(1, 1, '2020-02-28');
insert into t_time_range values(1, 1, '2020-02-29');
ERROR:  value to inserted execeed range of partitioned table
ALTER TABLE t_time_range ADD PARTITIONS 2;
insert into t_time_range values(1, 1, '2020-02-29');
insert into t_time_range values(1, 1, '2020-03-01');
drop table t_time_range;
